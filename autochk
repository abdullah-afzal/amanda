#!/bin/sh

# cd to the directory we're run from
cd `dirname $0`

die() {
    echo "$@"
    exit 1
}

[ $0 = "/bin/sh" -o $0 = "/bin/bash" ] && die "cannot source the autochk script"

devel_cfg=./config

toplevel=$(git rev-parse --show-toplevel)

[ -d "$toplevel" ] || { pwd -P; die "not within a repository to get version info from"; }

#
# test absolute requirements for building with submodules checked out...
#
if [ ! -s config/set_full_version -a -L config/set_full_version ] || 
    [ ! -s bitrock-stack/build-var-subst.sh -a -L bitrock-stack ] ||
    [ -s bitrock-stack/build-var-subst.sh -a ! -d bitrock-stack/common/include ]
then 
# perform completed checkout of submodules ...
    ( \
	cd $toplevel; 
	[ -s $toplevel/.gitmodules ] || die "ERROR: no $toplevel/.gitmodules file was found but symlinks are broken."
        git submodule deinit -f .
    	rm -rf 000-external   # to be certain nothing is checked out now...
	git submodule | sed -e 's,^.*000-external/,000-external/,' | xargs git checkout -f  >/dev/null 2>/dev/null
    	git submodule init
    )
fi

if [ -s $toplevel/.gitmodules ]; then
    ( \
	cd $toplevel; 
        git submodule foreach -q 'git rebase --abort 2>/dev/null || true'
        # first half of re-cloning 
        git submodule foreach -q 'git fetch --progress origin "+refs/heads/*:refs/remotes/origin/*" '
        # small changes allowed to remain
        git submodule foreach -q 'git config -f ${toplevel}/.gitmodules --get submodule.$name.branch' |
            git submodule foreach -q 'read branch; [ -z "$branch" ] && exit 0; git pull; true;'
        git submodule foreach -q 'git rebase --abort 2>/dev/null || true'
	git submodule foreach -q 'name1=$(git name-rev HEAD); name2=$(git describe --tags HEAD 2>/dev/null || git describe --all HEAD) ; echo "$path ---> $name1 / $name2"'
    )
fi

[ -L config/set_full_version ] || ln -sf ../packaging/common_z/set_zmanda_version config/set_full_version

[ -d config -a -d $devel_cfg/amanda -a -d $devel_cfg/macro-archive \
	-a -d $devel_cfg/gnulib -a -d $devel_cfg/gettext-macros ] || \
    die "ERROR: m4 include check failed"

[ -s config/set_full_version -a -L config/set_full_version ] || \
    die "ERROR: cannot use config/set_full_version symlink.  submodule checkout failed."

[ -s bitrock-stack/build-var-subst.sh ] || die "ERROR: cannot use bitrock-stack symlink.  submodule checkout failed."

set -- awk make gcc sed libtoolize \
        autoconf automake autoheader \
        swig perl bison flex gettext mailx \
        dump xinetd smbclient git tar cpio \
        strip ar base64 openssl mtx

failed=""
export PATH="$PATH:/bin:/usr/bin:/sbin:/usr/sbin"
for i do eval 'type $1 >/dev/null' $i || failed="$failed $i"; done

if [ -n "$failed" ]; then die "ERROR: failed executible tests: $failed"; fi

set -- CPAN List::Util IO::Socket::SSL Carp Data::Dumper ExtUtils::Embed 
for i do perl -e "use $i;" || failed="$failed $i"; done

if [ -n "$failed" ]; then die "ERROR: failed executible tests: $failed"; fi

exit 0
